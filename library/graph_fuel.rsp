<%@ Language=Recital %>
<html>
<head>
<script>
<%
set macros off
%>
<%@ include="graphs/RGraph.common.core.js" %>
<%@ include="graphs/RGraph.common.tooltips.js" %>
<%@ include="graphs/RGraph.common.effects.js" %>
<%@ include="graphs/RGraph.common.key.js" %>
<%@ include="graphs/RGraph.fuel.js" %>
</script> 
</head>
<%
set macros on
//--
// graph_fuel.rsp?parameter=value&parameter=value...
//
// parameters
//--
private m_width  = getParameter("width", "250") 
private m_height = getParameter("height", "250") 
private m_id     = getParameter("id", "graphCanvas") 
private m_data   = getParameter("data", "50, 100, 67") 
private m_guttertop = getParameter("guttertop", "25") 
private m_gutterbottom = getParameter("gutterbottom", "25") 
private m_gutterleft = getParameter("gutterleft", "50") 
private m_gutterright = getParameter("gutterright", "50") 
private m_shadow  = getParameter("shadow", "true") 
private m_title  = getParameter("title", "Untitled Vertical Bar Chart") 
private m_titleforecolor  = getParameter("titleforecolor", "gray") 
private m_titlebackcolor  = getParameter("titlebackcolor", "") 
private m_labelleft  = getParameter("labelleft", "Empty") 
private m_labelright  = getParameter("labelright", "Full") 
private m_labelforecolor  = getParameter("labelforecolor", "gray") 
private m_backcolor  = getParameter("backcolor", "#f7f7f7") 

// emit javascript code
text raw
<body style="background:&m_backcolor;overflow:hidden;">
<style>
.center-div
{
     position: relative;
     margin: auto;
     top: 0;
     right: 0;
     bottom: 0;
     left: 0;
     width: &m_width.px;
     height: &m_height.px;
}
</style>
<div class="center-div">
<canvas id="&m_id" width="&m_width.px" height="&m_height.px" style="background:&m_backcolor;overflow:hidden;">[No canvas support]</canvas>
</div>
<script>
    window.onload = function ()
    {
        // Create the Fuel chart. The arguments are: the minimum, the maximum, and the value.
        chart = new RGraph.Fuel('&m_id', &m_data);
        
        // Configure the Fuel chart to appear as wanted.
        chart.Set('chart.needle.color', 'lightblue');
        chart.Set('chart.colors', ['#ddf']);
        chart.Set('chart.labels.empty', '&m_labelleft');
        chart.Set('chart.labels.full', '&m_labelright');
	    chart.Set('chart.gutter.left', &m_gutterleft);
	    chart.Set('chart.gutter.right', &m_gutterright);
	    chart.Set('chart.gutter.top', &m_guttertop);
	    chart.Set('chart.gutter.bottom', &m_gutterbottom);
	 
	    chart.Set('chart.shadow', &m_shadow);
	    chart.Set('chart.shadow.blur', 10);
	    chart.Set('chart.shadow.color', 'lightgray');
	
	    chart.Set('chart.title', '&m_title');
	    if ('&m_titlebackcolor' != '') chart.Set('chart.title.background', '&m_titlebackcolor');
	    chart.Set('chart.title.color', '&m_titleforecolor');
  	    chart.Set('chart.text.color', '&m_labelforecolor');
   
        //chart.Set('chart.icon', 'images/binoculars.png');
        
        // Now call the .Draw() method to draw the chart.
        chart.Draw();
    }
</script>
endtext
%>
</body>
</html>


